{
	"name": "Notebook Billing file load",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "small33",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "898d27e4-88d4-4004-af75-936753e9632f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f17884ab-33f6-4e2d-830a-f5f6bcfdbb91/resourceGroups/rg_billing/providers/Microsoft.Synapse/workspaces/synbilling7/bigDataPools/small33",
				"name": "small33",
				"type": "Spark",
				"endpoint": "https://synbilling7.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/small33",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the schema if known; it helps in handling data types correctly\r\n",
					"# If the schema is not predefined, you can set inferSchema to True in the options below\r\n",
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DateType\r\n",
					"\r\n",
					"# Specify the schema\r\n",
					"schema = StructType([\r\n",
					"    StructField(\"rowId\", IntegerType(), False),\r\n",
					"    StructField(\"col1\", StringType(), True),\r\n",
					"    StructField(\"col2\", IntegerType(), True),\r\n",
					"    StructField(\"col3\", DateType(), True),\r\n",
					"    StructField(\"tags\", StringType(), True)\r\n",
					"])\r\n",
					"\r\n",
					"# Read the CSV file into a DataFrame\r\n",
					"df = spark.read.csv(\r\n",
					"    \"abfss://datalake@strgbilling.dfs.core.windows.net/raw/billing/year=2023/month=10/day=31/billing.csv\",  # Replace with the path to your CSV file\r\n",
					"    schema = schema,\r\n",
					"    header = True,\r\n",
					"    sep = \",\",\r\n",
					"    quote = '\"',\r\n",
					"    escape = '\"',\r\n",
					"    dateFormat = \"yyyy-MM-dd\",\r\n",
					"    multiLine = True  # This allows for newline characters within quoted strings\r\n",
					")"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df)"
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"execution_count": 17
			}
		]
	}
}